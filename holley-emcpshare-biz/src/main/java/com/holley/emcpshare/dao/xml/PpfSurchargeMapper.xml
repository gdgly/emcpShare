<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.holley.emcpshare.dao.PpfSurchargeMapper" >
  <resultMap id="BaseResultMap" type="com.holley.emcpshare.model.PpfSurcharge" >
    <id column="CUSTOMER_ID" property="customerId" jdbcType="INTEGER" />
    <id column="DATA_TIME" property="dataTime" jdbcType="TIMESTAMP" />
    <id column="ENERGY_TYPE" property="energyType" jdbcType="SMALLINT" />
    <result column="CALC_COUNT" property="calcCount" jdbcType="SMALLINT" />
    <result column="FEE" property="fee" jdbcType="DECIMAL" />
    <result column="MONEY" property="money" jdbcType="DECIMAL" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CUSTOMER_ID, DATA_TIME, ENERGY_TYPE, CALC_COUNT, FEE, MONEY, START_TIME, END_TIME, 
    UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.holley.emcpshare.model.PpfSurchargeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ppf_surcharge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.holley.emcpshare.model.PpfSurchargeKey" >
    select 
    <include refid="Base_Column_List" />
    from ppf_surcharge
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
      and DATA_TIME = #{dataTime,jdbcType=TIMESTAMP}
      and ENERGY_TYPE = #{energyType,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.holley.emcpshare.model.PpfSurchargeKey" >
    delete from ppf_surcharge
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
      and DATA_TIME = #{dataTime,jdbcType=TIMESTAMP}
      and ENERGY_TYPE = #{energyType,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.holley.emcpshare.model.PpfSurchargeExample" >
    delete from ppf_surcharge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.holley.emcpshare.model.PpfSurcharge" >
    insert into ppf_surcharge (CUSTOMER_ID, DATA_TIME, ENERGY_TYPE, 
      CALC_COUNT, FEE, MONEY, 
      START_TIME, END_TIME, UPDATE_TIME
      )
    values (#{customerId,jdbcType=INTEGER}, #{dataTime,jdbcType=TIMESTAMP}, #{energyType,jdbcType=SMALLINT}, 
      #{calcCount,jdbcType=SMALLINT}, #{fee,jdbcType=DECIMAL}, #{money,jdbcType=DECIMAL}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.holley.emcpshare.model.PpfSurcharge" >
    insert into ppf_surcharge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        CUSTOMER_ID,
      </if>
      <if test="dataTime != null" >
        DATA_TIME,
      </if>
      <if test="energyType != null" >
        ENERGY_TYPE,
      </if>
      <if test="calcCount != null" >
        CALC_COUNT,
      </if>
      <if test="fee != null" >
        FEE,
      </if>
      <if test="money != null" >
        MONEY,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="dataTime != null" >
        #{dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="energyType != null" >
        #{energyType,jdbcType=SMALLINT},
      </if>
      <if test="calcCount != null" >
        #{calcCount,jdbcType=SMALLINT},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.holley.emcpshare.model.PpfSurchargeExample" resultType="java.lang.Integer" >
    select count(*) from ppf_surcharge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ppf_surcharge
    <set >
      <if test="record.customerId != null" >
        CUSTOMER_ID = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.dataTime != null" >
        DATA_TIME = #{record.dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.energyType != null" >
        ENERGY_TYPE = #{record.energyType,jdbcType=SMALLINT},
      </if>
      <if test="record.calcCount != null" >
        CALC_COUNT = #{record.calcCount,jdbcType=SMALLINT},
      </if>
      <if test="record.fee != null" >
        FEE = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.money != null" >
        MONEY = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ppf_surcharge
    set CUSTOMER_ID = #{record.customerId,jdbcType=INTEGER},
      DATA_TIME = #{record.dataTime,jdbcType=TIMESTAMP},
      ENERGY_TYPE = #{record.energyType,jdbcType=SMALLINT},
      CALC_COUNT = #{record.calcCount,jdbcType=SMALLINT},
      FEE = #{record.fee,jdbcType=DECIMAL},
      MONEY = #{record.money,jdbcType=DECIMAL},
      START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
      END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.holley.emcpshare.model.PpfSurcharge" >
    update ppf_surcharge
    <set >
      <if test="calcCount != null" >
        CALC_COUNT = #{calcCount,jdbcType=SMALLINT},
      </if>
      <if test="fee != null" >
        FEE = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="money != null" >
        MONEY = #{money,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
      and DATA_TIME = #{dataTime,jdbcType=TIMESTAMP}
      and ENERGY_TYPE = #{energyType,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.holley.emcpshare.model.PpfSurcharge" >
    update ppf_surcharge
    set CALC_COUNT = #{calcCount,jdbcType=SMALLINT},
      FEE = #{fee,jdbcType=DECIMAL},
      MONEY = #{money,jdbcType=DECIMAL},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where CUSTOMER_ID = #{customerId,jdbcType=INTEGER}
      and DATA_TIME = #{dataTime,jdbcType=TIMESTAMP}
      and ENERGY_TYPE = #{energyType,jdbcType=SMALLINT}
  </update>
</mapper>